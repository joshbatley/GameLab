#pragma once

#include "../Engine/Engine.h"

enum Type {
    DEFAULT = 100,
    Water = 0,
    Sand = 1,
    Land = 2
};

const std::unordered_map<Type, Vec::ivec2> TileTypes {
  {Type::Water, {12 * 16, 11 * 16}},
  {Type::Land, {18 * 16, 1 * 16}},
  {Type::Sand, {12 * 16, 1 * 16}}};

struct RuleSet {
    Vec::ivec2 newSrc;
    std::vector<std::vector<int>> rule;
};

const std::vector<RuleSet> SandRules = {
  // Top
  {
    {11 * 16, 0 * 16},
    {{0, 0, 0},
     {0, 1, 1},
     {0, 1, 1}}},
  {{12 * 16, 0 * 16},
   {{0, 0, 0},
    {1, 1, 1},
    {1, 1, 1}}},
  {{13 * 16, 0 * 16},
   {{0, 0, 0},
    {1, 1, 0},
    {1, 1, 0}}},
  // Middle
  {
    {11 * 16, 1 * 16},
    {{0, 1, 1},
     {0, 1, 1},
     {0, 1, 1}}},
  {{12 * 16, 1 * 16},
   {{1, 1, 1},
    {1, 1, 1},
    {1, 1, 1}}},
  {{13 * 16, 1 * 16},
   {{1, 1, 0},
    {1, 1, 0},
    {1, 1, 0}}},
  // Bottom
  {
    {11 * 16, 2 * 16},
    {{0, 1, 1},
     {0, 1, 1},
     {0, 0, 0}}},
  {{12 * 16, 2 * 16},
   {{1, 1, 1},
    {1, 1, 1},
    {0, 0, 0}}},
  {{13 * 16, 2 * 16},
   {{1, 1, 0},
    {1, 1, 0},
    {0, 0, 0}}},
};


const std::vector<RuleSet> WaterRules = {
  // Top
  {
    {11 * 16, 10 * 16},
    {{1, 1, 1},
     {1, 0, 0},
     {1, 0, 0}}},
  {{12 * 16, 10 * 16},
   {{1, 1, 1},
    {0, 0, 0},
    {0, 0, 0}}},
  {{13 * 16, 10 * 16},
   {{1, 1, 1},
    {0, 0, 1},
    {0, 0, 1}}},
  // Middle
  {
    {11 * 16, 11 * 16},
    {{12, 0, 0},
     {1, 0, 0},
     {1, 0, 0}}},
  {{12 * 16, 11 * 16},
   {{0, 0, 0},
    {0, 0, 0},
    {0, 0, 0}}},
  {{13 * 16, 11 * 16},
   {{0, 0, 1},
    {0, 0, 1},
    {0, 0, 1}}},
  // Bottom
  {
    {11 * 16, 12 * 16},
    {{1, 0, 0},
     {1, 0, 0},
     {1, 1, 1}}},
  {{12 * 16, 12 * 16},
   {{0, 0, 0},
    {0, 0, 0},
    {1, 1, 1}}},
  {{13 * 16, 12 * 16},
   {{0, 0, 1},
    {0, 0, 1},
    {1, 1, 1}}},
};
const std::vector<RuleSet> LandRules = {
  // Top
  {
    {17 * 16, 0 * 16},
    {{1, 1, 1},
     {1, 2, 2},
     {1, 2, 2}}},
  {{18 * 16, 0 * 16},
   {{1, 1, 1},
    {2, 2, 2},
    {2, 2, 2}}},
  {{19 * 16, 0 * 16},
   {{1, 1, 1},
    {2, 2, 1},
    {2, 2, 1}}},
  // Middle
  {
    {17 * 16, 1 * 16},
    {{1, 2, 2},
     {1, 2, 2},
     {1, 2, 2}}},
  {{18 * 16, 1 * 16},
   {{2, 2, 2},
    {2, 2, 2},
    {2, 2, 2}}},
  {{19 * 16, 1 * 16},
   {{2, 2, 1},
    {2, 2, 1},
    {2, 2, 1}}},
  // Bottom
  {
    {17 * 16, 2 * 16},
    {{1, 2, 2},
     {1, 2, 2},
     {1, 1, 1}}},
  {{18 * 16, 2 * 16},
   {{2, 2, 2},
    {2, 2, 2},
    {1, 1, 1}}},
  {{19 * 16, 2 * 16},
   {{2, 2, 1},
    {2, 2, 1},
    {1, 1, 1}}},
};

const std::unordered_map<Type, std::vector<RuleSet>> Rules = {
  {Water, WaterRules},
  {Land, LandRules},
  {Sand, SandRules}};