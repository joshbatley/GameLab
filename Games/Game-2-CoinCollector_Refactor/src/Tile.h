#pragma once
#include <SDL_render.h>
#include <vector>

namespace Levels {
    inline std::vector<std::vector<int>> LEVEL_1 = {{33, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 34},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {35, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 36}};

    inline std::vector<std::vector<int>> LEVEL_2 = {{33, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 34},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 1, 3, 48, 48, 48, 48, 48, 48, 48, 1, 3, 48, 13},
                                                    {15, 48, 25, 27, 48, 48, 48, 48, 48, 48, 48, 25, 27, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 1, 2, 3, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 13, 14, 15, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 25, 26, 27, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 1, 3, 48, 48, 48, 48, 48, 48, 48, 1, 3, 48, 13},
                                                    {15, 48, 25, 27, 48, 48, 48, 48, 48, 48, 48, 25, 27, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {35, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 36}};

    inline std::vector<std::vector<int>> LEVEL_3 = {{33, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 34},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 1, 2, 2, 2, 2, 2, 3, 48, 8, 48, 8, 48, 13},
                                                    {15, 48, 13, 33, 26, 26, 26, 26, 27, 48, 20, 48, 20, 48, 13},
                                                    {15, 48, 13, 15, 48, 48, 48, 48, 48, 48, 20, 48, 20, 48, 13},
                                                    {15, 48, 13, 15, 48, 4, 5, 5, 5, 5, 31, 5, 29, 48, 13},
                                                    {15, 48, 13, 15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 25, 30, 05, 5, 5, 5, 5, 5, 5, 5, 6, 48, 13},
                                                    {15, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 13},
                                                    {15, 48, 4, 6, 48, 16, 5, 5, 5, 5, 5, 5, 17, 48, 13},
                                                    {15, 48, 48, 48, 48, 20, 48, 48, 48, 48, 48, 48, 20, 48, 13},
                                                    {15, 48, 8, 48, 48, 32, 48, 1, 2, 2, 3, 48, 20, 48, 13},
                                                    {15, 48, 28, 6, 48, 48, 48, 25, 26, 26, 27, 48, 20, 48, 13},
                                                    {15, 48, 48, 48, 48, 8, 48, 48, 48, 48, 48, 48, 20, 48, 13},
                                                    {35, 2, 2, 2, 2, 39, 2, 2, 2, 2, 2, 2, 39, 2, 36}};
}

class Tile {
    static constexpr int TILE_SIZE = 32;
    static constexpr int LEVEL_SIZE = 15;

public:
    Tile(std::string sprite_map, std::string coin_tex);
    void LoadLevel(int level);
    bool RemoveCoin(int x, int y);

    int (*GetLevel())[15][15]
    {
        return &_level;
    }

    std::vector<std::tuple<SDL_Rect, SDL_Rect, std::string>> Render();

    int GetCoinsLeft() const
    {
        return _coins_left;
    }

private:
    SDL_Rect _tile_src;
    SDL_Rect _tile_dest;
    SDL_Rect _coin_src;

    std::string _coin_tex;
    std::string _sprite_map;
    int _coins_left;
    int _coins[LEVEL_SIZE][LEVEL_SIZE];
    int _level[LEVEL_SIZE][LEVEL_SIZE];

    void loadCoins();
};